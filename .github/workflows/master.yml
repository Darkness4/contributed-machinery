on:
  push:
    branches:
      - master

name: Test, Build and Release APK and AAB for Master
jobs:
  # unit-tests:
  #   name: Unit tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Setup Java 8
  #       uses: actions/setup-java@master
  #       with:
  #         java-version: '8.x'
  #     - name: Flutter action
  #       uses: subosito/flutter-action@master
  #       with:
  #         channel: 'dev'
  #     - name: Upgrade flutter to master latest
  #       run: |
  #         flutter channel master
  #         flutter upgrade
  #         flutter --version
  #     - run: flutter pub get
  #     - run: sudo apt update
  #     - name: Install LCOV
  #       run: sudo apt install -y lcov
  #     - name: run test coverage
  #       run: |
  #         flutter test --coverage
  #         lcov -r coverage/lcov.info $(cat ./.lcovignore) -o coverage/lcov.info
  #         genhtml -o coverage coverage/lcov.info
  #     - name: Archive Coverage
  #       uses: actions/upload-artifact@master
  #       with:
  #         name: coverage
  #         path: coverage
  #     - name: Deploy coverage
  #       uses: Cecilapp/GitHub-Pages-deploy@master
  #       env:
  #         EMAIL: nguyen_marc@live.fr
  #         GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  #         BUILD_DIR: coverage
  apk-build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Java 8
        uses: actions/setup-java@master
        with:
          java-version: '8.x'
      - name: Flutter action
        uses: subosito/flutter-action@master
        with:
          channel: 'stable'
      - name: Upgrade flutter to stable latest
        run: |
          flutter channel stable
          flutter upgrade
          flutter --version
      - run: echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} | base64 -d > android/app/keystore.jks
      - run: echo ${{ secrets.GOOGLE_SERVICES_BASE64 }} | base64 -d > android/app/google-services.json
      - run: echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
      - run: echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      - run: echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties
      - run: echo "storeFile=keystore.jks" >> android/key.properties
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi
      - name: Archive APK
        uses: actions/upload-artifact@master
        with:
          name: release-apks
          path: build/app/outputs/apk/release
  aab-build:
    name: Build AAB
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Java 8
        uses: actions/setup-java@master
        with:
          java-version: '8.x'
      - name: Flutter action
        uses: subosito/flutter-action@master
        with:
          channel: 'stable'
      - name: Upgrade flutter to stable latest
        run: |
          flutter channel stable
          flutter upgrade
          flutter --version
      - run: echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} | base64 -d > android/app/keystore.jks
      - run: echo ${{ secrets.GOOGLE_SERVICES_BASE64 }} | base64 -d > android/app/google-services.json
      - run: echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
      - run: echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      - run: echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties
      - run: echo "storeFile=keystore.jks" >> android/key.properties
      - run: flutter pub get
      - run: flutter build appbundle --release
      - name: Archive AAB
        uses: actions/upload-artifact@master
        with:
          name: release-aab
          path: build/app/outputs/bundle/release
  web-build:
    name: Build and Deploy Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Java 12
        uses: actions/setup-java@master
        with:
          java-version: '12.x'
      - name: Flutter action
        uses: subosito/flutter-action@master
        with:
          channel: 'stable'
      - name: Upgrade flutter to stable latest
        run: |
          flutter channel stable
          flutter upgrade
          flutter --version
      - run: flutter pub get
      - run: flutter config --enable-web
      - run: echo ${{ secrets.FIREBASE_INIT_BASE64 }} | base64 -d > web/firebase-init.js
      - run: flutter build web --release
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
